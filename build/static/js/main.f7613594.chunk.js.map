{"version":3,"sources":["reportWebVitals.js","components/ResponsiveDrawer.js","components/NormalImageList.js","hooks/useWindowDimensions.js","redux/constants.js","redux/selectors.js","components/App.js","config/config.js","utils/CloudinaryService.js","redux/actions.js","redux/helpers.js","redux/reducers/PhotosListReducer.js","redux/reducers/UploadedPhotosReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","zIndex","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","closeMenuButton","marginLeft","ResponsiveDrawer","props","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","List","map","text","ListItem","button","ListItemText","primary","className","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","smDown","children","NormalImageList","hasWindow","window","getWindowDimensions","innerWidth","height","innerHeight","isMobile","isTablet","isDesktop","windowDimensions","setWindowDimensions","handleResize","useEffect","addEventListener","removeEventListener","useWindowDimensions","containerRef","useRef","cols","imageWidth","containerWidth","Math","round","getImageWidth","ImageList","ref","photos","item","i","ImageListItem","publicId","public_id","fetch-format","quality","crop","PHOTOS_FETCHED","DELETE_UPLOADED_PHOTO","UPDATE_UPLOADED_PHOTO","getPhotoState","state","key","cloud_name","upload_preset","App","fetch","res","json","resources","x","onPhotosFetched","this","allPhotos","cloudName","uploadPreset","Component","AppContainer","connect","type","sortPhotos","console","log","initialState","PhotosListReducer","action","UploadedPhotosReducer","uploadedPhotos","photoIndex","updatedPhotos","photo","index","id","uploadedPhoto","findIndex","current","response","body","slice","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8OCSDQ,EAAc,IAqF3B,IAAMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,QAEXC,OAAO,eACJH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,MAAOT,EACPU,WAAY,IAGhBC,OAAQ,CACNC,OAAQT,EAAMS,OAAON,OAAS,GAEhCO,WAAW,aACTC,YAAaX,EAAMY,QAAQ,IAC1BZ,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAGbW,QAASb,EAAMc,OAAOD,QACtBE,YAAa,CACXT,MAAOT,GAETmB,QAAS,CACPC,SAAU,GAEZC,gBAAiB,CACfP,YAAa,OACbQ,WAAY,OAcDC,EA5Hf,SAA0BC,GACxB,IACMC,EAAUxB,IACVE,EAAQuB,cAHiB,EAIKC,IAAMC,UAAS,GAJpB,mBAIxBC,EAJwB,KAIZC,EAJY,KAK/B,SAASC,IACPD,GAAeD,GAEjB,IAAMvB,EACF,8BACE,cAAC0B,EAAA,EAAD,UATkB,CAAC,cAUAC,KAAI,SAACC,GAAD,OACnB,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAcC,QAASJ,KADHA,UAQhC,OACE,sBAAKK,UAAWd,EAAQrB,KAAxB,UACE,cAACoC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWd,EAAQd,OAA5C,SACE,eAACgC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,KAAK,QACLC,QAASjB,EACTQ,UAAWd,EAAQZ,WALrB,SAOE,cAAC,IAAD,MAEF,cAACoC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,kCAMJ,sBAAKZ,UAAWd,EAAQnB,OAAxB,UAEE,cAAC8C,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,eAACC,EAAA,EAAD,CACEL,QAAQ,YACRM,OAA4B,QAApBrD,EAAMsD,UAAsB,QAAU,OAC9CC,KAAM7B,EACN8B,QAAS5B,EACTN,QAAS,CACPmC,MAAOnC,EAAQP,aAEjB2C,WAAY,CACVC,aAAa,GATjB,UAYE,cAAClB,EAAA,EAAD,CAAYI,QAASjB,EAAoBQ,UAAWd,EAAQJ,gBAA5D,SACE,cAAC,IAAD,MAEDf,OAGL,cAAC8C,EAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,MAA9B,SACE,eAACC,EAAA,EAAD,CACEhB,UAAWd,EAAQnB,OACnB4C,QAAQ,YACRzB,QAAS,CACPmC,MAAOnC,EAAQP,aAJnB,UAOE,qBAAKqB,UAAWd,EAAQT,UACvBV,UAIP,sBAAKiC,UAAWd,EAAQN,QAAxB,UACE,qBAAKoB,UAAWd,EAAQT,UACvBQ,EAAMwC,gBCvCAC,MAjDf,SAAyBzC,GAAQ,IAAD,ECFjB,WAEb,IAAM0C,EAA8B,qBAAXC,OAEzB,SAASC,IACP,IAAM3D,EAAQyD,EAAYC,OAAOE,WAAa,KAE9C,MAAO,CACL5D,QACA6D,OAHaJ,EAAYC,OAAOI,YAAc,KAI9CC,SAAU/D,EAbU,IAcpBgE,SAAUhE,GAdU,KAcoBA,EAbpB,KAcpBiE,UAAWjE,GAdS,MAEoB,MAgBImB,mBAASwC,KAhBb,mBAgBrCO,EAhBqC,KAgBnBC,EAhBmB,KAkBtCC,EAAe,WACnBD,EAAoBR,MAUtB,OAPAU,qBAAU,WACR,GAAIZ,EAEF,OADAC,OAAOY,iBAAiB,SAAUF,GAC3B,kBAAMV,OAAOa,oBAAoB,SAAUH,MAEnD,CAACX,IAEGS,ED1B+BM,GAA9BxE,EADsB,EACtBA,MAAO+D,EADe,EACfA,SAAUC,EADK,EACLA,SAEnBS,EAAeC,iBAAO,MAetBC,EAZAZ,EAAiB,EACjBC,EAAiB,EACd,EAWHY,EARgB,WACpB,IAAMC,EAAiB7E,EAAQ,GAC/B,OAAI+D,EAAiBc,EACjBb,EAAiBc,KAAKC,OAAOF,EAAiBtF,GAAe,GAC1DuF,KAAKC,OAAOF,EAAiBtF,GAAe,GAIlCyF,GAEnB,OACE,cAACC,EAAA,EAAD,CAAWN,KAAMA,EAAMO,IAAKT,EAA5B,SACC1D,EAAMoE,OAAO3D,KAAI,SAAC4D,EAAMC,GAAP,OAChB,cAACC,EAAA,EAAD,UACE,cAAC,QAAD,CACEC,SAAUH,EAAKI,UACfC,eAAa,OACbC,QAAQ,OACRC,KAAK,QACL3F,MAAO4E,GACFS,IAPWA,SE/BbO,EAAiB,iBAEjBC,EAAwB,wBACxBC,EAAwB,wBCHxBC,EAAgB,SAACC,EAAOC,GACjC,OAAOD,EAAMb,OAAOc,ICWjBC,G,aCXS,mBDWGC,ECVA,qBDYbC,E,kLACmB,IAAD,OEGbC,MAAM,eACRpH,MAAK,SAAAqH,GAAG,OAAIA,EAAIC,UAChBtH,MAAK,SAAAqH,GAAG,MAAK,CAAEE,UAAWF,MFJHrH,MAAK,SAAAwH,GAC3B,EAAK1F,MAAM2F,gBAAgBD,EAAED,gB,+BAIzB,IAAD,EACoBG,KAAK5F,MAAxB6F,iBADD,MACa,GADb,EAEL,OACE,qBAAK9E,UAAU,WAAf,SACE,cAAC,oBAAD,CACI+E,UAAWX,EACXY,aAAcX,EAFlB,SAIE,cAAC,EAAD,UACE,cAAC,EAAD,CAAiBhB,OAAQyB,c,GAhBvBG,aAsCHC,EAJMC,aAHG,SAAAjB,GAAK,MAAK,CAAEY,UAAWb,EAAcC,EAAO,gBAIhE,CAAEU,gBG1CuB,SAAAvB,GAAM,MAAK,CACpC+B,KAAMtB,EACNgB,UAAWzB,KHuCM8B,CAEnBb,G,QIlDWe,EAAa,SAACP,GAGvB,OAFAQ,QAAQC,IAAIT,GAELA,GCKLU,EAAe,CACnBV,UAAW,IAgBEW,EAbW,WAAmC,IAAlCvB,EAAiC,uDAAzBsB,EAAcE,EAAW,uCACxD,OAAQA,EAAON,MACX,KAAKtB,EAGD,OAFJwB,QAAQC,IAAIG,GACRJ,QAAQC,IAAIF,EAAWK,EAAOZ,YACvB,2BAAIZ,GAAX,IACEY,UAAWO,EAAWK,EAAOZ,YAAc,KAEjD,QACI,OAAO,eAAIZ,K,QCeRyB,EA/Be,WAAkC,IAAjCC,EAAgC,uDAAf,GAAIF,EAAW,uCAC3D,OAAQA,EAAON,MACX,KAAKpB,EACD,IAAI6B,GAAc,EACZC,EAAgBF,EAAelG,KAAI,SAACqG,EAAOC,GAC7C,OAAID,EAAME,KAAOP,EAAOQ,cAAcD,IAClCJ,EAAaG,EACN,2BAAKD,GAAUL,EAAOQ,gBAG1BH,KAGX,OAAuB,IAAhBF,EACDC,EADC,CAEAJ,EAAOQ,eAFP,mBAEyBN,IAEpC,KAAK7B,EACD,IAAMiC,EAAQJ,EAAeO,WACzB,SAAAC,GAAO,OAAIA,EAAQC,SAASC,KAAK5C,YAAcgC,EAAOjC,YAE1D,MAAM,GAAN,mBACOmC,EAAeW,MAAM,EAAGP,IAD/B,YAEOJ,EAAeW,MAAMP,EAAQ,KAGxC,QACI,OAAO,YAAIJ,KCtBjBY,GAAcC,YAAgB,CAChCpD,OAAQoC,EACRG,eAAgBD,IAGde,GAAQC,YAAYH,IAE1BI,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,EAAD,MAFN,OAKAK,SAASC,eAAe,SAM1BhK,M","file":"static/js/main.f7613594.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nexport const drawerWidth = 240;\n\n\nfunction ResponsiveDrawer(props) {\n  const dummyCategories = ['All photos']\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen)\n  }\n  const drawer = (\n      <div>\n        <List>\n          {dummyCategories.map((text) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            McNamara Photos\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <nav className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <IconButton onClick={handleDrawerToggle} className={classes.closeMenuButton}>\n              <CloseIcon/>\n            </IconButton>\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.toolbar} />\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <div className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n  },\n  closeMenuButton: {\n    marginRight: 'auto',\n    marginLeft: 0,\n  },\n}));\n\nResponsiveDrawer.propTypes = {\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nexport default ResponsiveDrawer;\n","import React, { useRef } from 'react';\nimport { ImageList, ImageListItem } from '@material-ui/core';\nimport { Image } from 'cloudinary-react';\nimport PropTypes from 'prop-types';\nimport useWindowDimensions from '../hooks/useWindowDimensions';\nimport { drawerWidth } from './ResponsiveDrawer';\n\nfunction NormalImageList(props) {\n  const { width, isMobile, isTablet } = useWindowDimensions();\n\n  const containerRef = useRef(null);\n\n  const getCols = () => {\n    if (isMobile) return 1;\n    if (isTablet) return 2;\n    return 3;\n  }\n\n  const getImageWidth = () => {\n    const containerWidth = width - 20;\n    if (isMobile) return containerWidth;\n    if (isTablet) return Math.round((containerWidth - drawerWidth) / 2);\n    return Math.round((containerWidth - drawerWidth) / 3);\n  }\n\n  const cols = getCols();\n  const imageWidth = getImageWidth();\n\n  return (\n    <ImageList cols={cols} ref={containerRef}>\n    {props.photos.map((item, i) => (\n      <ImageListItem key={i}>\n        <Image\n          publicId={item.public_id}\n          fetch-format=\"auto\"\n          quality=\"auto\"\n          crop=\"scale\"\n          width={imageWidth}\n          key={i}\n        />\n        {/*\n          <ImageListItemBar\n            title={item.title}\n            subtitle={<span>by: {item.author}</span>}\n          />\n          */}\n      </ImageListItem>\n    ))}\n    </ImageList>\n  );\n}\n\nNormalImageList.propTypes = {\n    photos: PropTypes.array,\n};\n\nexport default NormalImageList;\n","import { useState, useEffect } from 'react';\n\nconst MOBILE_BREAKPOINT = 768;\nconst TABLET_BREAKPOINT = 1024;\n\nexport default function useWindowDimensions() {\n\n  const hasWindow = typeof window !== 'undefined';\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n      isMobile: width < MOBILE_BREAKPOINT,\n      isTablet: width >= MOBILE_BREAKPOINT && width < TABLET_BREAKPOINT,\n      isDesktop: width >= TABLET_BREAKPOINT,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  const handleResize = () => {\n    setWindowDimensions(getWindowDimensions());\n  }\n\n  useEffect(() => {\n    if (hasWindow) {\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow]);\n\n  return windowDimensions;\n\n}\n","export const PHOTOS_FETCHED = 'PHOTOS_FETCHED';\nexport const PHOTOS_UPLOADED = 'PHOTOS_UPLOADED';\nexport const DELETE_UPLOADED_PHOTO = 'DELETE_UPLOADED_PHOTO';\nexport const UPDATE_UPLOADED_PHOTO = 'UPDATE_UPLOADED_PHOTO';\n","export const getPhotoState = (state, key) => {\n    return state.photos[key];\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CloudinaryContext } from 'cloudinary-react';\nimport NormalImageList from './NormalImageList';\nimport ResponsiveDrawer from './ResponsiveDrawer';\nimport { photosFetched } from '../redux/actions';\nimport { getPhotoState } from '../redux/selectors';\nimport { fetchPhotos } from '../utils/CloudinaryService';\nimport './App.css';\nimport config from '../config/config';\n\nconst {cloud_name, upload_preset} = config;\n\nclass App extends Component {\n    componentDidMount() {\n        fetchPhotos(cloud_name).then(x => {\n          this.props.onPhotosFetched(x.resources)\n        });\n    }\n\n    render() {\n      const { allPhotos = [] } = this.props;\n        return (\n          <div className=\"App-main\">\n            <CloudinaryContext\n                cloudName={cloud_name}\n                uploadPreset={upload_preset}\n            >\n              <ResponsiveDrawer>\n                <NormalImageList photos={allPhotos} />\n              </ResponsiveDrawer>\n            </CloudinaryContext>\n          </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    allPhotos: PropTypes.obj,\n    cloudName: PropTypes.string,\n    uploadPreset: PropTypes.string,\n    onPhotosFetched: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({ allPhotos: getPhotoState(state, 'allPhotos') });\n\n\nconst AppContainer = connect(mapStateToProps,\n    { onPhotosFetched: photosFetched }\n)(App);\n\nexport default AppContainer;\n","export default {\n    cloud_name: 'nineteesvintage',\n    upload_preset: 'YOUR_UPLOAD_PRESET' //Create an unsigned upload preset and update this\n};\n","import { Cloudinary as CoreCloudinary, Util } from 'cloudinary-core';\n\nexport const url = (publicId, options) => {\n    try {\n        const scOptions = Util.withSnakeCaseKeys(options);\n        const cl = CoreCloudinary.new();\n        return cl.url(publicId, scOptions);\n    } catch (e) {\n        console.error(e);\n        return null;\n    }\n};\n\nexport const openUploadWidget = (options, callback) => {\n    window.cloudinary.openUploadWidget(options, callback);\n};\n\nexport const fetchPhotos = () => {\n    return fetch('/api/images')\n        .then(res => res.json())\n        .then(res => ({ resources: res }));\n};\n","import {\n    PHOTOS_FETCHED,\n    PHOTOS_UPLOADED,\n    DELETE_UPLOADED_PHOTO,\n    UPDATE_UPLOADED_PHOTO,\n} from './constants';\n\nexport const photosFetched = photos => ({\n    type: PHOTOS_FETCHED,\n    allPhotos: photos,\n});\n\nexport const photosUploaded = photos => ({\n    type: PHOTOS_UPLOADED,\n    photos: photos,\n});\n\nexport const updateUploadedPhoto = uploadedPhoto => ({\n    type: UPDATE_UPLOADED_PHOTO,\n    uploadedPhoto: uploadedPhoto,\n});\n\nexport const deleteUploadedPhoto = publicId => ({\n    type: DELETE_UPLOADED_PHOTO,\n    publicId: publicId,\n});\n","export const sortPhotos = (allPhotos) => {\n    console.log(allPhotos);\n\n    return allPhotos;\n};\n","import {\n    PHOTOS_FETCHED,\n} from '../constants';\n\nimport {\n    sortPhotos,\n} from '../helpers';\n\nconst initialState = {\n  allPhotos: []\n};\n\nconst PhotosListReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PHOTOS_FETCHED:\n        console.log(action);\n            console.log(sortPhotos(action.allPhotos));\n            return {...state,\n              allPhotos: sortPhotos(action.allPhotos) || [],\n            };\n        default:\n            return {...state};\n    }\n};\n\nexport default PhotosListReducer;\n","import {\n    UPDATE_UPLOADED_PHOTO,\n    DELETE_UPLOADED_PHOTO,\n} from '../constants';\n\nconst UploadedPhotosReducer = (uploadedPhotos = [], action) => {\n    switch (action.type) {\n        case UPDATE_UPLOADED_PHOTO: {\n            let photoIndex = -1;\n            const updatedPhotos = uploadedPhotos.map((photo, index) => {\n                if (photo.id === action.uploadedPhoto.id) {\n                    photoIndex = index;\n                    return { ...photo, ...action.uploadedPhoto };\n                }\n\n                return photo;\n            });\n\n            return photoIndex !== -1\n                ? updatedPhotos\n                : [action.uploadedPhoto, ...uploadedPhotos];\n        }\n        case DELETE_UPLOADED_PHOTO: {\n            const index = uploadedPhotos.findIndex(\n                current => current.response.body.public_id === action.publicId\n            );\n            return [\n                ...uploadedPhotos.slice(0, index),\n                ...uploadedPhotos.slice(index + 1),\n            ];\n        }\n        default:\n            return [...uploadedPhotos];\n    }\n};\n\nexport default UploadedPhotosReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport PhotosListReducer from './redux/reducers/PhotosListReducer';\nimport UploadedPhotosReducer from './redux/reducers/UploadedPhotosReducer';\n\nconst rootReducer = combineReducers({\n    photos: PhotosListReducer,\n    uploadedPhotos: UploadedPhotosReducer,\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}