{"ast":null,"code":"import responsivePropType from './responsivePropType';\nimport style from './style';\nimport compose from './compose';\nimport { createUnaryUnit, getStyleFromPropValue } from './spacing';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return `${value}px solid`;\n}\n\nexport const border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\n\nfunction resolveCssProperty(props, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it isn’t worth the bundle size.\n  if (prop !== 'borderRadius') {\n    return null;\n  }\n\n  const cssProperties = ['borderRadius'];\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\n\nexport const borderRadius = props => {\n  const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');\n  return props.borderRadius ? resolveCssProperty(props, 'borderRadius', transformer) : {};\n};\nborderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {\n  borderRadius: responsivePropType\n} : {};\nborderRadius.filterProps = ['borderRadius'];\nconst borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","map":{"version":3,"sources":["/Users/jamesmcnamara/Documents/fam-photos/node_modules/@material-ui/system/esm/borders.js"],"names":["responsivePropType","style","compose","createUnaryUnit","getStyleFromPropValue","handleBreakpoints","getBorder","value","border","prop","themeKey","transform","borderTop","borderRight","borderBottom","borderLeft","borderColor","resolveCssProperty","props","transformer","cssProperties","styleFromPropValue","propValue","borderRadius","theme","propTypes","process","env","NODE_ENV","filterProps","borders"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,WAAvD;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD;;AAED,SAAQ,GAAEA,KAAM,UAAhB;AACD;;AAED,OAAO,MAAMC,MAAM,GAAGP,KAAK,CAAC;AAC1BQ,EAAAA,IAAI,EAAE,QADoB;AAE1BC,EAAAA,QAAQ,EAAE,SAFgB;AAG1BC,EAAAA,SAAS,EAAEL;AAHe,CAAD,CAApB;AAKP,OAAO,MAAMM,SAAS,GAAGX,KAAK,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,WADuB;AAE7BC,EAAAA,QAAQ,EAAE,SAFmB;AAG7BC,EAAAA,SAAS,EAAEL;AAHkB,CAAD,CAAvB;AAKP,OAAO,MAAMO,WAAW,GAAGZ,KAAK,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,aADyB;AAE/BC,EAAAA,QAAQ,EAAE,SAFqB;AAG/BC,EAAAA,SAAS,EAAEL;AAHoB,CAAD,CAAzB;AAKP,OAAO,MAAMQ,YAAY,GAAGb,KAAK,CAAC;AAChCQ,EAAAA,IAAI,EAAE,cAD0B;AAEhCC,EAAAA,QAAQ,EAAE,SAFsB;AAGhCC,EAAAA,SAAS,EAAEL;AAHqB,CAAD,CAA1B;AAKP,OAAO,MAAMS,UAAU,GAAGd,KAAK,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,YADwB;AAE9BC,EAAAA,QAAQ,EAAE,SAFoB;AAG9BC,EAAAA,SAAS,EAAEL;AAHmB,CAAD,CAAxB;AAKP,OAAO,MAAMU,WAAW,GAAGf,KAAK,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,aADyB;AAE/BC,EAAAA,QAAQ,EAAE;AAFqB,CAAD,CAAzB;;AAKP,SAASO,kBAAT,CAA4BC,KAA5B,EAAmCT,IAAnC,EAAyCU,WAAzC,EAAsD;AACpD;AACA;AACA,MAAIV,IAAI,KAAK,cAAb,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,QAAMW,aAAa,GAAG,CAAC,cAAD,CAAtB;AACA,QAAMC,kBAAkB,GAAGjB,qBAAqB,CAACgB,aAAD,EAAgBD,WAAhB,CAAhD;AACA,QAAMG,SAAS,GAAGJ,KAAK,CAACT,IAAD,CAAvB;AACA,SAAOJ,iBAAiB,CAACa,KAAD,EAAQI,SAAR,EAAmBD,kBAAnB,CAAxB;AACD;;AAED,OAAO,MAAME,YAAY,GAAGL,KAAK,IAAI;AACnC,QAAMC,WAAW,GAAGhB,eAAe,CAACe,KAAK,CAACM,KAAP,EAAc,oBAAd,EAAoC,CAApC,EAAuC,cAAvC,CAAnC;AACA,SAAON,KAAK,CAACK,YAAN,GAAqBN,kBAAkB,CAACC,KAAD,EAAQ,cAAR,EAAwBC,WAAxB,CAAvC,GAA8E,EAArF;AACD,CAHM;AAIPI,YAAY,CAACE,SAAb,GAAyBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/DL,EAAAA,YAAY,EAAEvB;AADiD,CAAxC,GAErB,EAFJ;AAGAuB,YAAY,CAACM,WAAb,GAA2B,CAAC,cAAD,CAA3B;AACA,MAAMC,OAAO,GAAG5B,OAAO,CAACM,MAAD,EAASI,SAAT,EAAoBC,WAApB,EAAiCC,YAAjC,EAA+CC,UAA/C,EAA2DC,WAA3D,EAAwEO,YAAxE,CAAvB;AACA,eAAeO,OAAf","sourcesContent":["import responsivePropType from './responsivePropType';\nimport style from './style';\nimport compose from './compose';\nimport { createUnaryUnit, getStyleFromPropValue } from './spacing';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return `${value}px solid`;\n}\n\nexport const border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport const borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\n\nfunction resolveCssProperty(props, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it isn’t worth the bundle size.\n  if (prop !== 'borderRadius') {\n    return null;\n  }\n\n  const cssProperties = ['borderRadius'];\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\n\nexport const borderRadius = props => {\n  const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');\n  return props.borderRadius ? resolveCssProperty(props, 'borderRadius', transformer) : {};\n};\nborderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {\n  borderRadius: responsivePropType\n} : {};\nborderRadius.filterProps = ['borderRadius'];\nconst borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;"]},"metadata":{},"sourceType":"module"}