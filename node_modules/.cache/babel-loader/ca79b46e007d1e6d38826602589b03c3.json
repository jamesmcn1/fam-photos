{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport typographyClasses, { getTypographyUtilityClass } from './typographyClasses';\n\nconst getTextColor = (color, palette) => {\n  if (color.indexOf('text') === 0) {\n    return palette.text[color.split('text').pop().toLowerCase()];\n  }\n\n  if (color === 'inherit' || color === 'initial') {\n    return color;\n  }\n\n  return palette[color].main;\n};\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps = {}\n  } = props;\n\n  const styleOverrides = _extends({}, styles.root, styleProps.variant && styles[styleProps.variant], styleProps.color && styles[`color${capitalize(styleProps.color)}`], styleProps.align && styles[`align${capitalize(styleProps.align)}`], styleProps.display && styles[`display${capitalize(styleProps.display)}`], styleProps.noWrap && styles.noWrap, styleProps.gutterBottom && styles.gutterBottom, styleProps.paragraph && styles.paragraph);\n\n  return styleOverrides;\n};\n\nexport const TypographyRoot = experimentalStyled('span', {}, {\n  name: 'Typography',\n  slot: 'Root',\n  overridesResolver\n})(props => _extends({\n  margin: 0\n}, props.styleProps.variant && props.theme.typography[props.styleProps.variant], props.styleProps.align !== 'inherit' && {\n  textAlign: props.styleProps.align\n}, props.styleProps.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, props.styleProps.gutterBottom && {\n  marginBottom: '0.35em'\n}, props.styleProps.paragraph && {\n  marginBottom: 16\n}, props.styleProps.color && props.styleProps.color !== 'initial' && {\n  color: getTextColor(props.styleProps.color, props.theme.palette)\n}, props.styleProps.display !== 'initial' && {\n  display: props.styleProps.display\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\nconst useTypographyClasses = props => {\n  const {\n    align,\n    color,\n    display,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes = {}\n  } = props;\n  const utilityClasses = {\n    root: clsx(typographyClasses['root'], classes['root'], getTypographyUtilityClass(`color${capitalize(color)}`), classes[`color${capitalize(color)}`], typographyClasses[`align${capitalize(align)}`], classes[`align${capitalize(align)}`], typographyClasses[`display${capitalize(display)}`], classes[`display${capitalize(display)}`], getTypographyUtilityClass(variant), classes[variant], gutterBottom && [typographyClasses['gutterBottom'], classes['gutterBottom']], noWrap && [typographyClasses['noWrap'], classes['noWrap']], paragraph && [typographyClasses['paragraph'], classes['paragraph']])\n  };\n  return utilityClasses;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    color = 'initial',\n    component,\n    display = 'initial',\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"align\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  const stateAndProps = _extends({}, props, {\n    align,\n    className,\n    color,\n    component,\n    display,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useTypographyClasses(stateAndProps);\n  return /*#__PURE__*/React.createElement(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    styleProps: stateAndProps,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'initial'\n   */\n  color: PropTypes.oneOf(['error', 'inherit', 'initial', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   * @default 'initial'\n   */\n  display: PropTypes.oneOf(['block', 'initial', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","map":{"version":3,"sources":["/Users/jamesmcnamara/Documents/fam-photos/node_modules/@material-ui/core/Typography/Typography.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","experimentalStyled","useThemeProps","capitalize","typographyClasses","getTypographyUtilityClass","getTextColor","color","palette","indexOf","text","split","pop","toLowerCase","main","overridesResolver","props","styles","styleProps","styleOverrides","root","variant","align","display","noWrap","gutterBottom","paragraph","TypographyRoot","name","slot","margin","theme","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","useTypographyClasses","classes","utilityClasses","Typography","forwardRef","inProps","ref","className","component","variantMapping","other","stateAndProps","Component","createElement","as","process","env","NODE_ENV","propTypes","oneOf","children","node","object","string","elementType","bool","oneOfType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport typographyClasses, { getTypographyUtilityClass } from './typographyClasses';\n\nconst getTextColor = (color, palette) => {\n  if (color.indexOf('text') === 0) {\n    return palette.text[color.split('text').pop().toLowerCase()];\n  }\n\n  if (color === 'inherit' || color === 'initial') {\n    return color;\n  }\n\n  return palette[color].main;\n};\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps = {}\n  } = props;\n\n  const styleOverrides = _extends({}, styles.root, styleProps.variant && styles[styleProps.variant], styleProps.color && styles[`color${capitalize(styleProps.color)}`], styleProps.align && styles[`align${capitalize(styleProps.align)}`], styleProps.display && styles[`display${capitalize(styleProps.display)}`], styleProps.noWrap && styles.noWrap, styleProps.gutterBottom && styles.gutterBottom, styleProps.paragraph && styles.paragraph);\n\n  return styleOverrides;\n};\n\nexport const TypographyRoot = experimentalStyled('span', {}, {\n  name: 'Typography',\n  slot: 'Root',\n  overridesResolver\n})(props => _extends({\n  margin: 0\n}, props.styleProps.variant && props.theme.typography[props.styleProps.variant], props.styleProps.align !== 'inherit' && {\n  textAlign: props.styleProps.align\n}, props.styleProps.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, props.styleProps.gutterBottom && {\n  marginBottom: '0.35em'\n}, props.styleProps.paragraph && {\n  marginBottom: 16\n}, props.styleProps.color && props.styleProps.color !== 'initial' && {\n  color: getTextColor(props.styleProps.color, props.theme.palette)\n}, props.styleProps.display !== 'initial' && {\n  display: props.styleProps.display\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\nconst useTypographyClasses = props => {\n  const {\n    align,\n    color,\n    display,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes = {}\n  } = props;\n  const utilityClasses = {\n    root: clsx(typographyClasses['root'], classes['root'], getTypographyUtilityClass(`color${capitalize(color)}`), classes[`color${capitalize(color)}`], typographyClasses[`align${capitalize(align)}`], classes[`align${capitalize(align)}`], typographyClasses[`display${capitalize(display)}`], classes[`display${capitalize(display)}`], getTypographyUtilityClass(variant), classes[variant], gutterBottom && [typographyClasses['gutterBottom'], classes['gutterBottom']], noWrap && [typographyClasses['noWrap'], classes['noWrap']], paragraph && [typographyClasses['paragraph'], classes['paragraph']])\n  };\n  return utilityClasses;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    color = 'initial',\n    component,\n    display = 'initial',\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"align\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  const stateAndProps = _extends({}, props, {\n    align,\n    className,\n    color,\n    component,\n    display,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useTypographyClasses(stateAndProps);\n  return /*#__PURE__*/React.createElement(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    styleProps: stateAndProps,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'initial'\n   */\n  color: PropTypes.oneOf(['error', 'inherit', 'initial', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   * @default 'initial'\n   */\n  display: PropTypes.oneOf(['block', 'initial', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"]},"metadata":{},"sourceType":"module"}